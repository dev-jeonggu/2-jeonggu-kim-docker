name: Deploy to AWS ECR and Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout 코드
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Amazon ECR 로그인
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 4. Docker 이미지 빌드 및 ECR로 푸시
      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 5. Dockerrun.aws.json 생성
      - name: Create Dockerrun.aws.json
        run: |
          echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO_NAME }}:${{ github.sha }}",
              "Update": true
            },
            "Ports": [
              {
                "ContainerPort": 3000
              }
            ]
          }' > Dockerrun.aws.json

      # 6. ZIP 파일 생성 및 S3 업로드
      - name: Create and upload ZIP file to S3
        run: |
          zip -r deploy.zip Dockerrun.aws.json
          aws s3 cp deploy.zip s3://jeonggu-kim-image-v-2/deploy.zip

      # 7. Elastic Beanstalk 배포
      - name: Deploy to Elastic Beanstalk
        run: |
          # 이전 버전 삭제
          aws elasticbeanstalk delete-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label Sample \
            --delete-source-bundle

          # 새 버전 생성
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket=jeonggu-kim-image-v-2,S3Key=deploy.zip

          # 환경 업데이트
          aws elasticbeanstalk update-environment \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label ${{ github.sha }}
